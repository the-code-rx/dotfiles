[
  {
    "key": "ctrl+shift+h",
    "command": "r.helpPanel.openForSelection",
    "when": "editorTextFocus && editorLangId == 'r'"
},
  {
    "key": "ctrl+shift+alt+cmd+t",
    "command": "r.runCommand",
    "description": "Reshape expressions longer or wider",
    "when": "editorTextFocus",
    "args": "codegrip::addin_reshape()"
  },
  {
    "key": "shift+ctrl+e",
    "command": "actions.findWithSelection"
  },
  {
    "key": "ctrl+e",
    "command": "-actions.findWithSelection"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "shift+ctrl+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "l",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "o",
    "command": "list.toggleExpand",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "h",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+;",
    "command": "insertPrevSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "ctrl+l",
    "when": "sideBarFocus",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+tab",
    "command": "-acceptAlternativeSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-vscode-neovim.ctrl-f",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "key": "space",
    "command": "whichkey.show",
    "when": "neovim.mode != 'insert' && !inputFocus"
  },
  {
    "key": "ctrl+shift+alt+cmd+l",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+shift+alt+cmd+1",
    "command": "workbench.action.focusFirstEditorGroup",
  },
  {
    "key": "ctrl+shift+alt+cmd+2",
    "command": "workbench.action.focusSecondEditorGroup",
  },
{
    "key": "ctrl+shift+alt+cmd+3",
    "command": "workbench.action.focusThirdEditorGroup",
  },
{
    "key": "ctrl+shift+alt+cmd+s",
    "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+alt+cmd+h",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+shift+alt+cmd+s",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+k ctrl+pagedown",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+k ctrl+pageup",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+shift+alt+cmd+.",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+shift+alt+cmd+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+shift+alt+cmd+v",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+k v",
    "command": "-markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+alt+cmd+v",
    "command": "r.rmarkdown.showPreviewToSide",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "ctrl+k v",
    "command": "-r.rmarkdown.showPreviewToSide",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "ctrl+shift+alt+cmd+r",
    "command": "python.execInTerminal-icon"
  },
  {
    "key": "ctrl+shift+alt+cmd+f",
    "command": "notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+alt+cmd+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+shift+alt+cmd+f",
    "command": "editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+cmd+f",
    "command": "notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+alt+cmd+k",
    "command": "rmarkdown.rmarkdown-core.Knit",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-rmarkdown.rmarkdown-core.Knit",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+cmd+k",
    "command": "r.knitRmd",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-r.knitRmd",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "ctrl+shift+alt+cmd+k",
    "command": "quarto.previewScript",
    "when": "quartoRenderScriptActive"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-quarto.previewScript",
    "when": "quartoRenderScriptActive"
  },
  {
    "key": "ctrl+shift+alt+cmd+k",
    "command": "quarto.preview",
    "when": "!quartoRenderScriptActive"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-quarto.preview",
    "when": "!quartoRenderScriptActive"
  },
  {
    "key": "ctrl+shift+alt+cmd+space",
    "command": "cSpell.suggestSpellingCorrections"
  },
  {
    "key": "ctrl+alt+h",
    "command": "-rest-client.history"
  },
  {
    "key": "ctrl+shift+alt+cmd+i",
    "command": "-workbench.action.quickchat.toggle",
    "when": "hasChatProvider"
  },
  {
    "key": "ctrl+shift+alt+cmd+i",
    "command": "-emojisense.quickEmojitextTerminal",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+alt+h",
    "command": "-extension.dash.all",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+h",
    "command": "-extension.dash.customSyntax",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+cmd+i",
    "command": "extension.dash.specific",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+h",
    "command": "-extension.dash.specific",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+cmd+i",
    "command": "docsetViewer.search"
  },
  {
    "key": "shift+f1",
    "command": "-docsetViewer.search"
  },
  {
    "key": "ctrl+enter",
    "command": "latex-workshop.build",
    "when": "!config.latex-workshop.bind.altKeymap.enabled && !virtualWorkspace && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "ctrl+alt+b",
    "command": "-latex-workshop.build",
    "when": "!config.latex-workshop.bind.altKeymap.enabled && !virtualWorkspace && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "ctrl+shift+alt+cmd+v",
    "command": "latex-workshop.view",
    "when": "!config.latex-workshop.bind.altKeymap.enabled && !virtualWorkspace && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "ctrl+alt+v",
    "command": "-latex-workshop.view",
    "when": "!config.latex-workshop.bind.altKeymap.enabled && !virtualWorkspace && editorLangId =~ /^latex$|^latex-expl3$|^doctex$|^rsweave$|^jlweave$|^pweave$/"
  },
  {
    "key": "ctrl+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+.",
    "command": "-acceptSelectedCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+.",
    "command": "-editor.changeDropType",
    "when": "dropWidgetVisible"
  },
  {
    "key": "ctrl+.",
    "command": "-editor.changePasteType",
    "when": "pasteWidgetVisible"
  },
  {
    "key": "ctrl+.",
    "command": "-problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "ctrl+.",
    "command": "-workbench.action.terminal.showQuickFixes",
    "when": "terminalFocus"
  },
  {
    "key": "j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inProjectManagerList"
},
{
  "key": "k",
  "command": "workbench.action.quickOpenSelectPrevious",
  "when": "inProjectManagerList"
},
{
  "key": "ctrl+shift+alt+cmd+f backspace",
  "command": "projectsExplorerGit.focus"
},
{
  "key": "ctrl+shift+alt+cmd+e",
  "command": "workbench.action.terminal.moveToEditor",
  "when": "terminalFocus"
},
{
  "key": "ctrl+shift+alt+cmd+c",
  "command": "workbench.action.terminal.moveToTerminalPanel",
  "when": "terminalFocus"
},
{
  "key": "ctrl+shift+alt+cmd+-",
  "command": "mysql.treeview.collapse"
},
{
  "key": "ctrl+alt+f",
  "command": "-liveshare.follow",
  "when": "liveshare:hasCollaborators && !liveshare:isFollowing"
},
{
  "key": "ctrl+alt+f",
  "command": "-liveshare.unfollow",
  "when": "liveshare:hasCollaborators && liveshare:isFollowing"
},
{
  "key": "ctrl+shift+alt+cmd+b",
  "command": "C_Cpp_Runner.buildFolder",
  "when": "C_Cpp_Runner:activatedExtension"
},
{
  "key": "ctrl+k b",
  "command": "-C_Cpp_Runner.buildFolder",
  "when": "C_Cpp_Runner:activatedExtension"
},
{
  "key": "ctrl+shift+alt+cmd+r",
  "command": "C_Cpp_Runner.runFolder",
  "when": "C_Cpp_Runner:activatedExtension"
},
{
  "key": "ctrl+shift+alt+cmd+a",
  "command": "r.helpPanel.openForPath"
}
]