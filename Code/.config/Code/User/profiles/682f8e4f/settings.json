{
  // Workbench Settings
  "workbench.editorAssociations": {
    "file:/**/*.csv": "jupyter-data-wrangler"
  },
  "workbench.editor.editorActionsLocation": "titleBar",
  // Workbench Default Themes
  "workbench.iconTheme": "helium-icon-theme",
  "workbench.colorTheme": "Tokyo Night",
  // Workbench Color Customizations
  "workbench.colorCustomizations": {
    "notebook.editorBackground": "#1a1b26",
    "notebook.outputContainerBorderColor": "#16161e",
    "notebook.outputContainerBackgroundColor": "#16161e89",
    "notebook.cellBorderColor": "#111115",
    "notebook.cellHoverBackground": "#00000000",
    "notebook.focusedCellBackground": "#1e214756",
    "notebook.selectedCellBackground": "#1d6a966a",
    "notebook.cellEditorBackground": "#1a1b26",
    "notebookStatusRunningIcon.foreground": "#9ece6a",
    "notebookStatusSuccessIcon.foreground": "#9ece6a",
    "notebookEditorOverviewRuler.runningCellForeground": "#9ece6a",
    "editorCursor.background": "#57d6e400",
    "editorCursor.foreground": "#e4ac578f",
    "editor.lineHighlightBackground": "#ffffff02",
    "[Tokyo Night]": {
      "editor.background": "#1a1b26",
      "editorGroupHeader.tabsBorder": "#1a1b26",
      "editorHoverWidget.background": "#1a1b26",
      "editorLineNumber.foreground": "#3b446da9",
      "editorLineNumber.activeForeground": "#bb9af7",
      "editor.findMatchBorder": "#f7768e",
      "editor.findMatchBackground": "#f7768386",
      "editorInlayHint.foreground": "#a9b1d630",
      "editorInlayHint.background": "#1a1b26",
      "editorUnnecessaryCode.opacity": "#f7768261",
      "editorIndentGuide.background1": "#a9b1d62e",
      "editorIndentGuide.activeBackground1": "#bb9af788",
      "tab.inactiveForeground": "#565f89",
      "tab.activeBackground": "#1a1b26",
      "editorGroupHeader.tabsBackground": "#1a1b26",
      "editorGroupHeader.border": "#1a1b26",
      "tab.inactiveBackground": "#1a1b26",
      "tab.activeForeground": "#a9b1d6",
      "tab.activeBorder": "#2ac3de00",
      "tab.activeBorderTop": "#9ece6a",
      "tab.unfocusedActiveBorderTop": "#565f89",
      "statusBar.foreground": "#a9b1d6a8",
      "statusBar.background": "#1a1b26",
      "statusBarItem.remoteBackground": "#a9b1d6a8",
      "statusBarItem.remoteForeground": "#1a1b26",
      "statusBarItem.remoteHoverBackground": "#2ac3de",
      "statusBarItem.remoteHoverForeground": "#1a1b26",
      "terminal.background": "#1a1b26",
      "titleBar.border": "#1a1b26",
      "titleBar.activeBackground": "#1a1b26",
      "sideBar.background": "#1a1b26",
      "sideBarSectionHeader.background": "#1a1b26",
      "activityBar.background": "#1a1b26",
      "activityBar.activeBackground": "#16161e",
      "breadcrumb.background": "#1a1b26",
      "panel.background": "#1a1b26",
      "dropdown.background": "#1a1b26"
    },
    "[Visual Studio Dark - C++]": {
      "editorGroupHeader.tabsBackground": "#1a1b26",
      "editor.background": "#1a1b26",
      "editorHoverWidget.background": "#1a1b26",
      "editorLineNumber.foreground": "#3b446da9",
      "editorLineNumber.activeForeground": "#bb9af7",
      "editor.findMatchBorder": "#f7768e",
      "editor.findMatchBackground": "#f7768386",
      "editorInlayHint.foreground": "#a9b1d630",
      "editorInlayHint.background": "#1a1b26",
      "editorUnnecessaryCode.opacity": "#f7768261",
      "tab.inactiveForeground": "#565f89",
      "tab.inactiveBackground": "#1a1b26",
      "tab.activeForeground": "#bb9af7",
      "tab.activeBorder": "#2ac3de00",
      "tab.activeBorderTop": "#bb9af7",
      "tab.unfocusedActiveBorderTop": "#565f89",
      "activityBar.inactiveForeground": "#3b446da9",
      "activityBar.foreground": "#bb9af7",
      "activityBar.background": "#1a1b26",
      "sideBar.background": "#1a1b26",
      "sideBar.foreground": "#565f89",
      "sideBarTitle.foreground": "#565f89",
      "sideBar.border": "#09090c",
      "panel.border": "#09090c",
      "panelTitle.inactiveForeground": "#565f89",
      "panelTitle.activeForeground": "#565f89",
      "statusBar.foreground": "#bb9af7",
      "statusBar.background": "#1a1b26",
      "statusBarItem.remoteBackground": "#bb9af7",
      "statusBarItem.remoteForeground": "#1a1b26",
      "statusBarItem.remoteHoverBackground": "#2ac3de",
      "statusBarItem.remoteHoverForeground": "#1a1b26",
      "button.background": "#385090"
    },
    "statusBar.background": "#a9b1d6"
  },
  // Font Family Settings
  "editor.fontFamily": "JetBrains Mono",
  "scm.inputFontFamily": "JetBrains Mono",
  "terminal.integrated.fontFamily": "JetBrainsMonoNL Nerd Font",
  "chat.editor.fontFamily": "JetBrains Mono",
  "debug.console.fontFamily": "JetBrains Mono",
  "editor.codeLensFontFamily": "JetBrains Mono",
  "notebook.output.fontFamily": "JetBrains Mono",
  "markdown.preview.fontFamily": "JetBrainsMonoNL Nerd Font",
  "editor.inlayHints.fontFamily": "JetBrains Mono",
  // Font Style Settings
  "editor.fontWeight": "300",
  "editor.fontSize": 18.0,
  "editor.lineHeight": 1.55,
  "window.zoomLevel": 1.33,
  // Editor Visual Settings
  "zenMode.hideLineNumbers": false,
  "editor.minimap.enabled": false,
  "editor.scrollbar.vertical": "auto",
  "editor.scrollbar.horizontal": "auto",
  "editor.stickyScroll.enabled": false,
  "editor.lineNumbers": "relative",
  "editor.fontLigatures": false,
  "editor.mouseWheelZoom": true,
  "editor.linkedEditing": true,
  "editor.tabSize": 4,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": false,
  "editor.guides.indentation": true,
  "editor.snippetSuggestions": "bottom",
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "off",
    "strings": "off"
  },
  // Terminal Settings
  "terminal.integrated.fontSize": 17.0,
  "terminal.integrated.gpuAcceleration": "on",
  // File and Save Settings
  "files.autoSave": "off",
  "explorer.confirmDragAndDrop": false,
  "window.commandCenter": false,
  "quarto.render.renderOnSave": true,
  "explorer.compactFolders": false,
  "workbench.settings.editor": "json",
  "breadcrumbs.filePath": "off",
  "files.trimTrailingWhitespace": true,
  "editor.formatOnSave": true,
  // Other Settings
  "jupyter.interactiveWindow.textEditor.executeSelection": true,
  "workbench.editor.wrapTabs": true,
  "breadcrumbs.enabled": false,
  "editor.scrollbar.verticalScrollbarSize": 0,
  "editor.scrollbar.horizontalScrollbarSize": 0,
  // Neovim settings
  "vscode-neovim.neovimInitVimPaths.win32": "/home/joeyv/.config/nvim/init.vim",
  "vscode-neovim.neovimExecutablePaths.linux": "/home/joeyv/opt/nvim/bin/nvim",
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  // Data Wrangler settings
  "dataWrangler.experiments.fastCsvParsing": true,
  // CSpell settings
  "cSpell.showAutocompleteSuggestions": true,
  "errorLens.excludeBySource": ["cSpell"],
  // Markdown settings
  "markdown-preview-github-styles.darkTheme": "dark_dimmed",
  "markdown.preview.fontSize": 15.5,
  "markdown.marp.mathTypesetting": "katex",
  "markdown.preview.scrollEditorWithPreview": false,
  "[markdown]": {
    "files.trimTrailingWhitespace": false
  },
  // JSON setting
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "prettier.requireConfig": false,
  "prettier.useEditorConfig": false,
  // LaTeX settings
  "latex-workshop.view.pdf.color.dark.backgroundColor": "#1a1b26",
  // Notebook settings
  "notebook.formatOnSave.enabled": true,
  "notebook.codeActionsOnSave": {
    "notebook.source.organizeImports": true
  },
  // Python settings
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.autoImportCompletions": true,
  "python.analysis.inlayHints.variableTypes": true,
  "python.analysis.autoFormatStrings": true,
  "python.analysis.typeCheckingMode": "basic",
  "python.condaPath": "/home/joeyv/miniconda3/bin/conda",
  "python.createEnvironment.contentButton": "show",
  "python.defaultInterpreterPath": "/home/joeyv/miniconda3/bin/python",
  "black-formatter.interpreter": ["/home/joeyv/miniconda3/bin/python"],
  "ruff.interpreter": ["/home/joeyv/miniconda3/bin/python"],
  "pip-manager.source": "pypi",
  "[python]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    },
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  // SQL settings
  "[sql]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "inferrinizzard.prettier-sql-vscode"
  },
  "Prettier-SQL.keywordCase": "upper",
  "Prettier-SQL.linesBetweenQueries": 2,
  "Prettier-SQL.SQLFlavourOverride": "postgresql",
  "database-client.capitalizeKeywordsWhenFormatting": true,
  "database-client.showTrigger": true,
  "database-client.resultRowHeight": "30px",
  "database-client.createResultViewForEachQuery": true,
  "database-client.terminalLocation": "Panel",
  // C/C++ settings
  "C_Cpp.formatting": "clangFormat",
  "C_Cpp.default.intelliSenseMode": "clang-x64",
  "C_Cpp_Runner.cCompilerPath": "clang",
  "C_Cpp_Runner.cppCompilerPath": "clang++",
  "C_Cpp_Runner.debuggerPath": "lldb",
  "C_Cpp_Runner.cppStandard": "c++20",
  "C_Cpp_Runner.cStandard": "c11",
  "[c]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[cmake]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "cheshirekow.cmake-format"
  },
  "[cpp]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "[cuda-cpp]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  // R settings
  "[r]": {
    "editor.wordBasedSuggestions": "allDocuments",
    "editor.defaultFormatter": "REditorSupport.r",
    "editor.formatOnSave": true,
    "editor.tabSize": 2
  },
  "r.rterm.linux": "/home/joeyv/miniconda3/bin/radian",
  "r.bracketedPaste": true,
  "r.removeLeadingComments": true,
  "r.plot.useHttpgd": true,
  "r.lsp.enabled": true,
  // Quarto settings
  "[quarto]": {
    "editor.defaultFormatter": "quarto.quarto"
  },
  "codesnap.containerPadding": "0.25em",
  "codesnap.roundedCorners": true,
  // Drawio
  "hediet.vscode-drawio.resizeImages": null,
  // Error Lens
  "errorLens.delay": 4000,
  "errorLens.fontSize": "12",
  "errorLens.fontFamily": "JetBrains Mono Light",
  "errorLens.followCursor": "allLinesExceptActive",
  "errorLens.margin": "5ch",
  "errorLens.messageBackgroundMode": "message",
  // Files and project management settings
  "files.exclude": {
    "**/.git": true,
    "**/.vscode": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/**.aux": true,
    "**/**.synctex.gz": true,
    "**/**.fls": true,
    "**/**.fdb_latexmk": true,
    "**/**.loe": true,
    "**/**.lof": true,
    "**/**.log": true,
    "**/**.vrb": true,
    "**/**.snm": true,
    "**/**.out": true,
    "**/**.nav": true,
    "**/**.pgf*": true,
    "**/**.snippets": true,
    "**/**.toc": true,
    "**/**.pygmented": true,
    "**/**.bbl*": true,
    "**/**.run.xml": true,
    "**/**.bcf": true,
    "**/**.blg": true,
    "**/**.sil": true,
    "_*": true,
    "tex/_*": true
  },
  "projectManager.openInNewWindowWhenClickingInStatusBar": true,
  "projectManager.git.baseFolders": ["~/DS"],
  // Auto docstring settings
  "autoDocstring.docstringFormat": "numpy",
  "autoDocstring.quoteStyle": "'''",
  // Kubernetes
  "vs-kubernetes": {
    "vscode-kubernetes.helm-path-linux": "/home/joeyv/.local/state/vs-kubernetes/tools/helm/linux-amd64/helm",
    "vscode-kubernetes.kubectl-path-linux": "/home/joeyv/.local/state/vs-kubernetes/tools/kubectl/kubectl",
    "vscode-kubernetes.minikube-path-linux": "/home/joeyv/.local/state/vs-kubernetes/tools/minikube/linux-amd64/minikube"
  },
  // APC Extension Customizations
  "apc.activityBar": {
    //"position": "top",
    "hideSettings": false,
    "size": 32
  },
  "apc.electron": {
    "titleBarStyle": "hiddenInset",
    "trafficLightPosition": {
      "x": 12,
      "y": 10
    }
  },
  "apc.font.family": "JetBrains Mono",
  "apc.monospace.font.family": "JetBrains Mono",
  "apc.statusBar": {
    "position": "editor-bottom",
    "height": 30,
    "fontSize": 16
  },
  "apc.listRow": {
    "lists": ["explorer-folders-view", "results"], // dafault if height or fontSize are provided ['customview-tree', 'results', 'open-editors', 'explorer-folders-view', 'outline-tree', 'scm-view', 'debug-view-content', 'debug-breakpoints', 'tree']
    "height": 22,
    "fontSize": 13
  },
  "apc.header": {
    "fontSize": 17
  },
  // Custom css
  "apc.stylesheet": {
    ".split-view-view .visible": "background-color: #1a1b26 !important"
    //".tabs-and-actions-container > .editor-actions": "display: none !important"
  },
  // Which Key Setup
  "whichkey.sortOrder": "alphabetically",
  "whichkey.delay": 0,
  "whichkey.bindings": [
    {
      "key": "w",
      "name": "Save file",
      "type": "command",
      "command": "workbench.action.files.save"
    },
    {
      "key": "q",
      "name": "Close file",
      "type": "command",
      "command": "workbench.action.closeActiveEditor"
    },
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "/",
      "name": "comment",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "<C-/>"
    },
    {
      "key": "?",
      "name": "View All References",
      "type": "command",
      "command": "references-view.find",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "D",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart ebug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "s",
          "name": "Symbol",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "B",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "C",
          "name": "Cherry Pick",
          "type": "command",
          "command": "gitlens.views.cherryPick"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "F",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "g",
          "name": "Graph",
          "type": "command",
          "command": "git-graph.view"
        },
        {
          "key": "h",
          "name": "Heatmap",
          "type": "command",
          "command": "gitlens.toggleFileHeatmap"
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Pull",
          "type": "command",
          "command": "git.pull"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },
    {
      "key": "l",
      "name": "LSP...",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "a",
          "name": "Auto Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.revealDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.revealDeclaration"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "f",
          "name": "Format",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.goToImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "n",
          "name": "Next Problem",
          "type": "command",
          "command": "editor.action.marker.next",
          "when": "editorFocus"
        },
        {
          "key": "N",
          "name": "Next Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.nextInFiles",
          "when": "editorFocus"
        },
        {
          "key": "o",
          "name": "Outline",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "p",
          "name": "Prev Problem",
          "type": "command",
          "command": "editor.action.marker.prevInFiles",
          "when": "editorFocus"
        },
        {
          "key": "P",
          "name": "Prev Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.prev",
          "when": "editorFocus"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "R",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "v",
          "name": "View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        }
      ]
    },
    {
      "key": "m",
      "name": "Mark...",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Clear Bookmarks",
          "type": "command",
          "command": "bookmarks.clear"
        },
        {
          "key": "j",
          "name": "Next Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToNext",
          "when": "editorTextFocus"
        },
        {
          "key": "k",
          "name": "Previous Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToPrevious",
          "when": "editorTextFocus"
        },
        {
          "key": "l",
          "name": "List Bookmarks",
          "type": "command",
          "command": "bookmarks.listFromAllFiles",
          "when": "editorTextFocus"
        },
        {
          "key": "r",
          "name": "Refresh Bookmarks",
          "type": "command",
          "command": "bookmarks.refresh"
        },
        {
          "key": "t",
          "name": "Toggle Bookmark",
          "type": "command",
          "command": "bookmarks.toggle",
          "when": "editorTextFocus"
        },
        {
          "key": "s",
          "name": "Show Bookmarks",
          "type": "command",
          "command": "workbench.view.extension.bookmarks"
        }
      ]
    },
    {
      "key": "M",
      "name": "Minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    {
      "key": "n",
      "name": "No Highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "o",
      "name": "Open...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Directory",
          "type": "command",
          "command": "workbench.action.files.openFolder"
        },
        {
          "key": "r",
          "name": "Recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "workbench.action.files.openFile"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "projectsExplorerGit.focus"
        }
      ]
    },
    {
      "key": "p",
      "name": "Peek...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.peekDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.peekDeclaration"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "p",
          "name": "Toggle Focus",
          "type": "command",
          "command": "togglePeekWidgetFocus",
          "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "t",
          "name": "Type Definition",
          "type": "command",
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "Text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "b",
          "name": "Show database",
          "type": "command",
          "command": "workbench.view.extension.github-cweijan-mysql"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "Terminal...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "T",
          "name": "Focus Terminal",
          "type": "command",
          "command": "workbench.action.terminal.toggleTerminal",
          "when": "!terminalFocus"
        },
        {
          "key": "e",
          "name": "To Editor",
          "command": "workbench.action.terminal.moveToEditor"
        },
        {
          "key": "p",
          "name": "To Pane",
          "command": "workbench.action.terminal.moveToTerminalPanel"
        }
      ]
    },
    {
      "key": "u",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "d",
      "name": "TMUX...",
      "type": "bindings",
      "bindings": [
        {
          "key": "-",
          "name": "Split Horizontal",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "\\",
          "name": "Split Vertical",
          "type": "command",
          "command": "workbench.action.splitEditor"
        },
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "Extensions",
      "type": "command",
      "command": "workbench.view.extensions"
    },
    {
      "key": "y",
      "name": "Sync...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Download Settings",
          "type": "command",
          "command": "extension.downloadSettings"
        },
        {
          "key": "u",
          "name": "Upload Settings",
          "type": "command",
          "command": "extension.updateSettings"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "r.session.levelOfObjectDetail": "Normal",
  "terminal.integrated.tabs.enabled": false,
  "codesnap.showWindowControls": false,
  "codesnap.backgroundColor": "#1a1b26",
  "latex-workshop.latex.external.build.args": ["-shell-escape"],
  "window.density.editorTabHeight": "compact",
  "workbench.activityBar.location": "hidden"
}
